using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Draw.src.Model
{
    [Serializable]
    internal class GroupShape : Shape
    {
        #region Constructor

        public GroupShape(RectangleF rect) : base(rect)
        {
        }

        public GroupShape(RectangleShape rectangle) : base(rectangle)
        {
        }

        #endregion

        public List<Shape> SubShape = new List<Shape>();

        /// <summary>
        /// Проверка за принадлежност на точка point към правоъгълника.
        /// В случая на правоъгълник този метод може да не бъде пренаписван, защото
        /// Реализацията съвпада с тази на абстрактния клас Shape, който проверява
        /// дали точката е в обхващащия правоъгълник на елемента (а той съвпада с
        /// елемента в този случай).
        /// </summary>
        public override bool Contains(PointF point)
        {
            if (base.Contains(point))
            {
                foreach (var item in SubShape)
                {
                    if (item.Contains(point)) 
                        return true;
                }

                return true;
            }
            else
            {
                return false;
            }
        }

        public void MoveGroupShapes(PointF p)
        {
            foreach (var item in SubShape)
            {
                item.MoveGroupedShape(p);
            }
        }

       
        public override void DrawSelf(Graphics grfx)
        {
            base.DrawSelf(grfx);
            base.RotateShape(grfx);


            foreach (var item in SubShape)
            {
                item.DrawSelf(grfx);
            }
        }
    }
}

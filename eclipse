using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Draw.src.Model
{
    [Serializable]
    internal class EllipseShape : Shape
    {
        #region Constructor

        public EllipseShape(RectangleF rect) : base(rect)
        {
        }

        public EllipseShape(RectangleShape rectangle) : base(rectangle)
        {
        }

        #endregion

        
        public override bool Contains(PointF point)
        {
            float centerX = this.Location.X + (this.Width / 2);
            float centerY = this.Location.Y + (this.Height / 2);
            double checkPoint = (Math.Pow(point.X - centerX, 2) / Math.Pow(this.Width / 2, 2)) + (Math.Pow(point.Y - centerY, 2) / Math.Pow(this.Height / 2, 2));
            if (checkPoint <= 1)
                return true;
            else
                return false;
        }

        
        public override void DrawSelf(Graphics grfx)
        {
            base.DrawSelf(grfx);
           

            base.RotateShape(grfx);

            grfx.FillEllipse(new SolidBrush(FillColor),Rectangle.X, Rectangle.Y, Rectangle.Width, Rectangle.Height);
            grfx.DrawEllipse(new Pen(BorderColor), Rectangle.X, Rectangle.Y, Rectangle.Width, Rectangle.Height);

            grfx.ResetTransform();
            
        }
    }
}
